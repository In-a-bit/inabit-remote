name: Build & Publish Approver Image

on:
  push:
    branches: [ "develop", "main" ]
    tags: [ "approver/**" ]
    paths:
      - 'docker/dockerfiles/Dockerfile.approver'
      - '.github/workflows/build-and-publish.yml'
  workflow_dispatch:   # manual run

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set BRANCH_NAME (push / merge)
        if: github.event_name != 'pull oper_request'
        run: |
          echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Set BRANCH_NAME (pull request)
        if: github.event_name == 'pull_request'
        run: |
          echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

      - name: Set lowercase repo name
        run: |
          echo "LOWERCASE_REPO=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set VERSION_TAG (git tag push)
        if: github.ref_type == 'tag'
        run: |
          RAW="${GITHUB_REF#refs/tags/approver/}"
          # If it starts with approver/, strip it; otherwise use full tag
          if [[ "${GITHUB_REF}" == refs/tags/approver/* ]]; then
            CLEAN="$RAW"
          else
            CLEAN="${GITHUB_REF#refs/tags/}"
          fi
          echo "VERSION_TAG=$CLEAN" >> $GITHUB_ENV
          echo "Tag: $RAW â†’ Version tag: $CLEAN"

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/dockerfiles/Dockerfile.approver
          push: true
          tags: |
            ghcr.io/${{ env.LOWERCASE_REPO }}/approver:${{ github.sha }}
            ${{ github.ref_type == 'branch' && format('ghcr.io/{0}/approver:{1}', env.LOWERCASE_REPO, env.BRANCH_NAME) || '' }}
            ${{ github.ref_type == 'tag' && format('ghcr.io/{0}/approver:{1}', env.LOWERCASE_REPO, env.VERSION_TAG) || '' }}
            ${{ (github.ref_type == 'branch' && github.ref_name == 'main') && format('ghcr.io/{0}/approver:latest', env.LOWERCASE_REPO) || '' }}
